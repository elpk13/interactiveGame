import pygame
import os
#import sys

pygame.init()
#pygame.font.init()

#draw the window used for the game
WIDTH = 900
HEIGHT = 500
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("First Game")
#QUARTWID = WIDTH / 4
#HALFHEIGH = HEIGHT / 2


#set the colors used throughout the window
FORESTGN = (51, 102, 0)
SKYBLUE = (204, 229, 255)
WHITE = (255, 255, 255)


#fonts
#TESTFONT = pygame.font.SysFont('Corbel', 35)
#CHSTEXT = TESTFONT.render('Choose Game', True, SKYBLUE)
#SETTEXT = TESTFONT.render('Settings', True, SKYBLUE)
#ABTTEXT = TESTFONT.render('About', True, SKYBLUE)


#update rate of the window
FPS = 60
#pull the image from the file folder Assets into the game window
WOLF_GREY_IMAGE = pygame.image.load(os.path.join('Assets', "greyWolf.png"))

#this is where we will scale the image (i scaled this test image manually, so the line is commented out)
#SCALE

#draw the buttons

#draw the window and update it to display the change in color 
def draw_window():
    WIN.fill(WHITE)
    WIN.blit(WOLF_GREY_IMAGE, (450,250))
#    pygame.draw.rect(WIN,FORESTGN,[QUARTWID,HALFHEIGH,100,50])
#    pygame.draw.rect(WIN,FORESTGN,[QUARTWID*2,HALFHEIGH,100,50])
#    pygame.draw.rect(WIN,FORESTGN,[QUARTWID*3,HALFHEIGH,100,50])
#    pygame.display.update()


def main():
    clock = pygame.time.Clock()
    run = True
    while run:
        clock.tick(FPS)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
#            if event.type == pygame.KEYDOWN:
                #do this only when the appropriate key is clicked - sort keys
#                if event.key == pygame.K_LEFT:
                    #move left
#                if event.key == pygame.K_RIGHT:
                    #move right
#                if event.key == pygame.K_RETURN:
                    #click
#                    pygame.draw.rect(WIN,SKYBLUE,[QUARTWID*3,HALFHEIGH,100,50])
                #now need to show buttons 
                
        draw_window()
    pygame.quit()

if __name__ == "__main__":
    main()
